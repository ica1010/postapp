# Generated by Django 5.0.7 on 2024-07-13 09:50

import django.db.models.deletion
import shortuuid.django_fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', editable=False, length=6, max_length=255, prefix='cat-', unique=True)),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(default='default.jpg', max_length=250, upload_to='')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jid', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', editable=False, length=6, max_length=255, prefix='job-', unique=True)),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(default='default.jpg', max_length=250, upload_to='')),
                ('description', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='user.profileemployeur')),
                ('category', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='category', to='post.category')),
                ('tag', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
